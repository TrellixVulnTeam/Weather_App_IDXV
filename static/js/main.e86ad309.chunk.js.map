{"version":3,"sources":["Component/DisplayWeather.jsx","Component/Weather.jsx","App.js","index.js"],"names":["DisplayWeather","props","data","iconurl","cod","weather","icon","className","name","sys","country","Date","toLocaleTimeString","Math","floor","main","temp","src","alt","temp_max","temp_min","humidity","pressure","visibility","wind","speed","deg","sunrise","sunset","message","Weather","useState","setWeather","city","form","setForm","APIKEY","e","a","preventDefault","alert","fetch","then","res","json","handleChange","target","value","type","placeholder","onChange","onClick","weatherData","undefined","App","ReactDOM","render","document","getElementById"],"mappings":"gQA0EeA,MAvEf,SAAwBC,GACtB,IAAQC,EAASD,EAATC,KACFC,EAAS,8CACG,MAAbD,EAAKE,IAAcF,EAAKG,QAAQ,GAAGC,KAAO,MAC7C,OAMF,OACE,qBAAKC,UAAU,iBAAf,SACgB,MAAbL,EAAKE,IACJ,qCACE,sBAAKG,UAAU,WAAf,UACE,uBAAMA,UAAU,YAAhB,UACGL,EAAKM,KADR,MACiBN,EAAKO,IAAIC,QAD1B,eAGA,uBAAMH,UAAU,eAAhB,oBACS,IAAII,MAAOC,wBAGpB,+BACGC,KAAKC,MAAMZ,EAAKa,KAAKC,KAAO,QAC7B,uCAEF,sBAAMT,UAAU,eAAhB,SAAgCL,EAAKG,QAAQ,GAAGU,OAChD,qBAAKR,UAAU,eAAeU,IAAKd,EAASe,IAAI,gBAChD,sBAAMX,UAAU,2BAIZ,sBAAKA,UAAU,YAAf,UAGA,0DAA6BM,KAAKC,MAAMZ,EAAKa,KAAKI,SAAW,QAA7D,IACON,KAAKC,MAAMZ,EAAKa,KAAKK,SAAW,WAGzC,gDAAmBlB,EAAKa,KAAKM,SAA7B,QAEA,gDAAmBnB,EAAKa,KAAKO,SAA7B,UAEA,iDAAoBpB,EAAKqB,WAAa,IAAtC,SAEA,kDAAqBV,KAAKC,MAAyB,GAAlBZ,EAAKsB,KAAKC,MAAc,GAAzD,YAEA,sDAAyBvB,EAAKsB,KAAKE,IAAnC,IAAwC,oCAAxC,UAEA,+CAAkB,IAAIf,KAAwB,IAAnBT,EAAKO,IAAIkB,SAAgBf,wBAEpD,8CAAiB,IAAID,KAAuB,IAAlBT,EAAKO,IAAImB,QAAehB,8BAYxD,qBAAKL,UAAU,WAAf,SACE,6BAAKL,EAAK2B,eCYLC,MA3Ef,WACE,MAA8BC,mBAAS,IAAvC,mBAAO1B,EAAP,KAAgB2B,EAAhB,KACA,EAAwBD,mBAAS,CAC/BE,KAAM,GACNvB,QAAS,KAFX,mBAAOwB,EAAP,KAAaC,EAAb,KAWMC,EAAS,mCAbE,4CAcjB,WAA2BC,GAA3B,eAAAC,EAAA,yDACED,EAAEE,iBACgB,KAAdL,EAAKD,KAFX,gBAGIO,MAAM,cAHV,sCAKuBC,MAAM,qDAAD,OAC+BP,EAAKD,KADpC,YAC4CC,EAAKxB,QADjD,kBACkE0B,IAEvFM,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACxC,GAAD,OAAUA,KATtB,OAKUA,EALV,OAWI8B,EAAW,CAAE9B,KAAMA,IAXvB,4CAdiB,sBA6BjB,IAAM2C,EAAe,SAACR,GACpB,IAAI7B,EAAO6B,EAAES,OAAOtC,KAChBuC,EAAQV,EAAES,OAAOC,MAER,SAATvC,GACF2B,EAAQ,2BAAKD,GAAN,IAAYD,KAAMc,KAEd,YAATvC,GACF2B,EAAQ,2BAAKD,GAAN,IAAYxB,QAASqC,MAGhC,OAAQ,mCACN,sBAAKxC,UAAU,UAAf,UACE,sBAAMA,UAAU,QAAhB,yBACA,uBACA,iCACE,uBACEyC,KAAK,OACLC,YAAY,OACZzC,KAAK,OACL0C,SAAU,SAACb,GAAD,OAAOQ,EAAaR,IAC9B9B,UAAU,UANd,qBASE,uBACEyC,KAAK,OACLC,YAAY,UACZzC,KAAK,UACL0C,SAAU,SAACb,GAAD,OAAOQ,EAAaR,IAC9B9B,UAAU,UAEZ,wBAAQA,UAAU,aAAa4C,QApDvB,SAACd,IARE,oCASfe,CAAYf,IAmDR,4BAMiBgB,IAAlBhD,EAAQH,KACP,8BACE,cAAC,EAAD,CAAgBA,KAAMG,EAAQH,SAE9B,WC7DKoD,EAXH,WACR,OACI,mCACI,qBAAK/C,UAAU,MAAf,SACN,cAAC,EAAD,S,YCCNgD,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.e86ad309.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction DisplayWeather(props) {\r\n  const { data } = props;\r\n  const iconurl =\"http://openweathermap.org/img/wn/\" +\r\n    `${data.cod !== 404 ? data.weather[0].icon : null}` +\r\n    \".png\";\r\n\r\n\r\n \r\n\r\n\r\n  return (\r\n    <div className=\"displayweather\">\r\n      {data.cod !== 404 ? (\r\n        <>\r\n          <div className=\"maincard\">\r\n            <span className=\"cardtitle\">\r\n              {data.name} , {data.sys.country}. Weather\r\n            </span>\r\n            <span className=\"cardsubtitle\">\r\n              As of {new Date().toLocaleTimeString()}\r\n            </span>\r\n\r\n            <h1>\r\n              {Math.floor(data.main.temp - 273.15)}\r\n              <sup>o</sup>\r\n            </h1>\r\n            <span className=\"weather-main\">{data.weather[0].main}</span>\r\n            <img className=\"weather-icon\" src={iconurl} alt=\"weatherlogo\" />\r\n            <span className=\"weather-description\">\r\n            </span>\r\n          </div>\r\n         \r\n                <div className='more_info'>\r\n\r\n\r\n                <span> Min/Max Temprature : {Math.floor(data.main.temp_max - 273.15)}/\r\n                      {Math.floor(data.main.temp_min - 273.15)}</span>\r\n\r\n\r\n              <span> Humidity : {data.main.humidity} %</span>\r\n\r\n              <span> Pressure : {data.main.pressure} hPa</span>\r\n              \r\n              <span> Visiblity : {data.visibility / 1000} Km</span>\r\n\r\n              <span> Wind Speed : {Math.floor((data.wind.speed * 18) / 5)} km/hr</span>\r\n\r\n              <span> Wind Direction : {data.wind.deg} <sup>o</sup> deg</span>\r\n                      \r\n              <span> Sunrise : {new Date(data.sys.sunrise * 1000).toLocaleTimeString()}</span>\r\n\r\n              <span> sunset : {new Date(data.sys.sunset * 1000).toLocaleTimeString()}</span>\r\n                      \r\n                    \r\n\r\n\r\n                </div>\r\n              \r\n\r\n\r\n          \r\n        </>\r\n      ) : (\r\n        <div className=\"maincard\">\r\n          <h2>{data.message}</h2>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayWeather;","import React, { useState } from \"react\";\r\nimport DisplayWeather from \"./DisplayWeather\";\r\n  \r\n\r\nfunction Weather() {\r\n  const [weather, setWeather] = useState([]);\r\n  const [form, setForm] = useState({\r\n    city: \"\",\r\n    country: \"\",\r\n  });\r\n\r\n\r\n  const click = (e) => {\r\n    weatherData(e);\r\n  }\r\n\r\n\r\n  const APIKEY = \"edb895d10505db5dafedb0b698a9bd0b\";\r\n  async function weatherData(e) {\r\n    e.preventDefault();\r\n    if (form.city === \"\") {\r\n      alert(\"Add values\");\r\n    } else {\r\n      const data = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${form.city},${form.country}&APPID=${APIKEY}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => data);\r\n\r\n      setWeather({ data: data });\r\n    }\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n\r\n    if (name === \"city\") {\r\n      setForm({ ...form, city: value });\r\n    }\r\n    if (name === \"country\") {\r\n      setForm({ ...form, country: value });\r\n    }\r\n  };\r\n  return (<>\r\n    <div className=\"weather\">\r\n      <span className=\"title\">Weather App</span>\r\n      <br />\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"city\"\r\n          name=\"city\"\r\n          onChange={(e) => handleChange(e)}\r\n          className=\"input\"\r\n        />\r\n        &nbsp; &nbsp; &nbsp;&nbsp;\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Country\"\r\n          name=\"country\"\r\n          onChange={(e) => handleChange(e)}\r\n          className=\"input\"\r\n        />\r\n        <button className=\"getweather\" onClick={click}>\r\n          Submit\r\n        </button>\r\n      </form>\r\n\r\n      {/* {console.log(weather)} */}\r\n      {weather.data !==  undefined ? (\r\n        <div>\r\n          <DisplayWeather data={weather.data} />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n    \r\n  </>);\r\n}\r\nexport default Weather;","import React from 'react';\r\nimport Weather from './Component/Weather';\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <div className=\"App\">\r\n      <Weather />\r\n    </div>\r\n    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\nimport './scss/displayweather.scss';\nimport './scss/weather.scss';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}