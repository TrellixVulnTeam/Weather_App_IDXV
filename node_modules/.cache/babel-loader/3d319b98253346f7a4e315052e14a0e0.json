{"ast":null,"code":"var _jsxFileName = \"D:\\\\Reactapp\\\\weather_app\\\\src\\\\Component\\\\Weather.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport DisplayWeather from \"./DisplayWeather\";\nimport { demo } from './DisplayWeather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const [weather, setWeather] = useState([]);\n  const [form, setForm] = useState({\n    city: \"\",\n    country: \"\"\n  });\n\n  const click = e => {\n    weatherData(e);\n\n    if (demo === 'haze') {\n      document.getElementById('demo1').style.backgroundImage = \"\";\n    }\n  };\n\n  const APIKEY = \"edb895d10505db5dafedb0b698a9bd0b\";\n\n  async function weatherData(e) {\n    e.preventDefault();\n\n    if (form.city == \"\") {\n      alert(\"Add values\");\n    } else {\n      const data = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${form.city},${form.country}&APPID=${APIKEY}`).then(res => res.json()).then(data => data);\n      setWeather({\n        data: data\n      });\n    }\n  }\n\n  const handleChange = e => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    if (name == \"city\") {\n      setForm({ ...form,\n        city: value\n      });\n    }\n\n    if (name == \"country\") {\n      setForm({ ...form,\n        country: value\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"title\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"city\",\n        name: \"city\",\n        onChange: e => handleChange(e),\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), \"\\xA0 \\xA0 \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Country\",\n        name: \"country\",\n        onChange: e => handleChange(e),\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"getweather\",\n        onClick: click,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), weather.data != undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DisplayWeather, {\n        data: weather.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"/IXG6+7O9tu992xud+W57WduQ2M=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["D:/Reactapp/weather_app/src/Component/Weather.jsx"],"names":["React","useState","DisplayWeather","demo","Weather","weather","setWeather","form","setForm","city","country","click","e","weatherData","document","getElementById","style","backgroundImage","APIKEY","preventDefault","alert","data","fetch","then","res","json","handleChange","name","target","value","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport DisplayWeather from \"./DisplayWeather\";\r\nimport {demo} from './DisplayWeather';\r\n\r\nfunction Weather() {\r\n  const [weather, setWeather] = useState([]);\r\n  const [form, setForm] = useState({\r\n    city: \"\",\r\n    country: \"\",\r\n  });\r\n\r\n\r\n  const click = (e) => {\r\n    weatherData(e);\r\n\r\n    if(demo==='haze'){\r\n      document.getElementById('demo1').style.backgroundImage=\"\";\r\n    }\r\n  }\r\n\r\n\r\n  const APIKEY = \"edb895d10505db5dafedb0b698a9bd0b\";\r\n  async function weatherData(e) {\r\n    e.preventDefault();\r\n    if (form.city == \"\") {\r\n      alert(\"Add values\");\r\n    } else {\r\n      const data = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${form.city},${form.country}&APPID=${APIKEY}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => data);\r\n\r\n      setWeather({ data: data });\r\n    }\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n\r\n    if (name == \"city\") {\r\n      setForm({ ...form, city: value });\r\n    }\r\n    if (name == \"country\") {\r\n      setForm({ ...form, country: value });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"weather\">\r\n      <span className=\"title\">Weather App</span>\r\n      <br />\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"city\"\r\n          name=\"city\"\r\n          onChange={(e) => handleChange(e)}\r\n          className=\"input\"\r\n        />\r\n        &nbsp; &nbsp; &nbsp;&nbsp;\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Country\"\r\n          name=\"country\"\r\n          onChange={(e) => handleChange(e)}\r\n          className=\"input\"\r\n        />\r\n        <button className=\"getweather\" onClick={click}>\r\n          Submit\r\n        </button>\r\n      </form>\r\n\r\n      {/* {console.log(weather)} */}\r\n      {weather.data != undefined ? (\r\n        <div>\r\n          <DisplayWeather data={weather.data} />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;"]},"metadata":{},"sourceType":"module"}